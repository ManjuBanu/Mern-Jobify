{"ast":null,"code":"import { DISPLAY_ALERT, CLEAR_ALERT, REGISTER_USER_BEGIN, REGISTER_USER_SUCCESS, REGISTER_USER_ERROR } from './actions';\nconst reducer = (state, action) => {\n  if (action.type === DISPLAY_ALERT) {\n    return {\n      ...state,\n      showAlert: true,\n      alertType: 'danger',\n      alertText: 'Please provide all values!'\n    };\n  }\n  if (action.type === CLEAR_ALERT) {\n    return {\n      ...state,\n      showAlert: false,\n      alertType: '',\n      alertText: ''\n    };\n  }\n  if (action.type === REGISTER_USER_BEGIN) {\n    return {\n      ...state,\n      isLoading: true\n    };\n  }\n  if (action.type === reg) {\n    return {\n      ...state,\n      isLoading: true\n    };\n  }\n  throw new Error(`no such action : ${action.type}`);\n};\nexport default reducer;","map":{"version":3,"names":["DISPLAY_ALERT","CLEAR_ALERT","REGISTER_USER_BEGIN","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","reducer","state","action","type","showAlert","alertType","alertText","isLoading","reg","Error"],"sources":["/Users/manjumaladevim/Desktop/jobify-mern/client/src/context/reducer.js"],"sourcesContent":["\nimport {DISPLAY_ALERT,CLEAR_ALERT, REGISTER_USER_BEGIN,REGISTER_USER_SUCCESS,REGISTER_USER_ERROR } from './actions';\n\nconst reducer = (state, action) =>{\n    if(action.type === DISPLAY_ALERT){\n        return {\n            ...state, \n            showAlert:true, \n            alertType:'danger' , \n            alertText:'Please provide all values!'\n        }\n    }\n\n    if (action.type === CLEAR_ALERT) {\n        return {\n          ...state,\n          showAlert: false,\n          alertType: '',\n          alertText: '',\n        };\n      }\n\n      if (action.type === REGISTER_USER_BEGIN) {\n        return {\n          ...state,\n          isLoading: true,\n        };\n      }\n\n      if (action.type === reg) {\n        return {\n          ...state,\n          isLoading: true,\n        };\n      }\n\n      \n    throw new Error(`no such action : ${action.type}`)\n}\n\nexport default reducer;"],"mappings":"AACA,SAAQA,aAAa,EAACC,WAAW,EAAEC,mBAAmB,EAACC,qBAAqB,EAACC,mBAAmB,QAAQ,WAAW;AAEnH,MAAMC,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAI;EAC9B,IAAGA,MAAM,CAACC,IAAI,KAAKR,aAAa,EAAC;IAC7B,OAAO;MACH,GAAGM,KAAK;MACRG,SAAS,EAAC,IAAI;MACdC,SAAS,EAAC,QAAQ;MAClBC,SAAS,EAAC;IACd,CAAC;EACL;EAEA,IAAIJ,MAAM,CAACC,IAAI,KAAKP,WAAW,EAAE;IAC7B,OAAO;MACL,GAAGK,KAAK;MACRG,SAAS,EAAE,KAAK;MAChBC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE;IACb,CAAC;EACH;EAEA,IAAIJ,MAAM,CAACC,IAAI,KAAKN,mBAAmB,EAAE;IACvC,OAAO;MACL,GAAGI,KAAK;MACRM,SAAS,EAAE;IACb,CAAC;EACH;EAEA,IAAIL,MAAM,CAACC,IAAI,KAAKK,GAAG,EAAE;IACvB,OAAO;MACL,GAAGP,KAAK;MACRM,SAAS,EAAE;IACb,CAAC;EACH;EAGF,MAAM,IAAIE,KAAK,CAAE,oBAAmBP,MAAM,CAACC,IAAK,EAAC,CAAC;AACtD,CAAC;AAED,eAAeH,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}